@page "/"
@namespace LoginComponent
@using ScSoMeBlazorServer.Authentication;
@using ScSoMeBlazorServer.Hasher;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<h3>Login</h3>
<CascadingAuthenticationState>
    <AuthorizeView>

        <NotAuthorized>
            <div class="form-group">
                <label>User name:</label>
                <input type="text" placeholder="Username" @bind-value="username" />
            </div>

            <div class="form-group">
                <label>Password</label>
                <input type="password" placeholder="Password" @bind-value="password" />
            </div>


            <div style="color:red">@errorMessage</div>

            <a href="" @onclick="PerformLogin">
                Login
             </a>

            <a href="" @onclick="ToSignUp">
                Sign up
            </a>
        </NotAuthorized>

        <Authorized>
            <a href="" @onclick="PerformLogout">
                Logout
            </a>
        </Authorized>
    </AuthorizeView>
</CascadingAuthenticationState>



@code {
    private string username;
    private string password;
    private string errorMessage;


    private void ToSignUp(){
        try
        {
            NavigationManager.NavigateTo("/signUp");

        }
        catch (Exception e ){
        
            Console.WriteLine(e);
        }
    }
    
    private async Task PerformLogin()
    {
        PasswordHasher hasher = new PasswordHasher();
        errorMessage = "";
        try
        {
            password = hasher.GetHashPasswords(password);
            await ((CustomAuthentication)AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
            //NavigationManager.NavigateTo("/");




        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }

    private void PerformLogout()
    {
        username = "";
        password = "";
        errorMessage = "";

        try
        {
            ((CustomAuthentication)AuthenticationStateProvider).Logout();
            //NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
        }
    }
}